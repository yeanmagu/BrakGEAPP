!function(b){function a(){this.$dom=b(document),this.$html=this.$dom.find("html"),this.isOldie=!!this.$html.hasClass("oldie"),this.click="click",this.onReady=this.onOldie=this.onTouch=!1,this.autoInit="false"===b("script[gumby-init]").attr("gumby-init")?!1:!0,this.debugMode=Boolean(b("script[gumby-debug]").length),this.touchDevice=!!(Modernizr.touch||window.navigator.userAgent.indexOf("Windows Phone")>0),this.gumbyTouch=!1,this.touchEvents="js/libs",this.breakpoint=Number(b("script[gumby-breakpoint]").attr("gumby-breakpoint"))||768,this.touchEventsLoaded=!1,this.uiModulesReady=!1,this.uiModules={},this.inits={};
var d=b("script[gumby-touch]").attr("gumby-touch"),c=b("script[gumby-path]").attr("gumby-path");
"false"===d?this.touchEvents=!1:d?this.touchEvents=d:c&&(this.touchEvents=c),this.touchDevice&&(this.click+=" tap"),this.touchDevice&&b(window).width()<this.breakpoint?(this.$html.addClass("gumby-touch"),this.gumbyTouch=!0):this.$html.addClass("gumby-no-touch"),this.debugMode&&this.debug("Gumby is in debug mode")
}a.prototype.init=function(f){var d=this,c=f?f:{};
return this.$dom.ready(function(){c.debug&&(d.debugMode=!0),d.debug("Initializing Gumby");
var e=c.uiModules?c.uiModules:!1;
d.initUIModules(e),d.onReady&&d.onReady(),d.isOldie&&d.onOldie&&d.onOldie(),Modernizr.touch&&d.onTouch&&d.onTouch()
}),this
},a.prototype.helpers=function(){this.onReady&&this.onReady(),this.isOldie&&this.onOldie&&this.onOldie(),Modernizr.touch&&this.onTouch&&this.onTouch()
},a.prototype.ready=function(c){return c&&"function"==typeof c&&(this.onReady=c),this
},a.prototype.oldie=function(c){return c&&"function"==typeof c&&(this.onOldie=c),this
},a.prototype.touch=function(c){return c&&"function"==typeof c&&(this.onTouch=c),this
},a.prototype.console=function(d,c){this.debugMode&&window.console&&console[console[d]?d:"log"](c.length>1?Array.prototype.slice.call(c):c[0])
},a.prototype.log=function(){this.console("log",arguments)
},a.prototype.debug=function(){this.console("debug",arguments)
},a.prototype.warn=function(){this.console("warn",arguments)
},a.prototype.error=function(){this.console("error",arguments)
},a.prototype.dump=function(){return{$dom:this.$dom,isOldie:this.isOldie,touchEvents:this.touchEvents,debugMode:this.debugMode,autoInit:this.autoInit,uiModules:this.uiModules,click:this.click}
},a.prototype.selectAttr=function(){for(var g=0;
g<arguments.length;
g++){var d=arguments[g],c="data-"+arguments[g],f="gumby-"+arguments[g];
if(this.is("["+c+"]")){return this.attr(c)?this.attr(c):!0
}if(this.is("["+f+"]")){return this.attr(f)?this.attr(f):!0
}if(this.is("["+d+"]")){return this.attr(d)?this.attr(d):!0
}}return !1
},a.prototype.addInitalisation=function(d,c){this.inits[d]=c
},a.prototype.initialize=function(f,d){if("object"==typeof f){var c=0;
for(c;
c<f.length;
c++){this.inits[f[c]]&&"function"==typeof this.inits[f[c]]?this.inits[f[c]](d):this.error("Error initializing module: "+f[c])
}}else{this.inits[f]&&"function"==typeof this.inits[f]?this.inits[f](d):this.error("Error initializing module: "+f)
}return this
},a.prototype.UIModule=function(d){var c=d.module;
this.uiModules[c]=d
},a.prototype.initUIModules=function(g){var d,c,f=this.uiModules;
g&&(f=g);
for(d in f){c=g?f[d]:d,this.uiModules[c].init()
}},window.Gumby=new a
}(jQuery),!function(b){function a(d){Gumby.debug("Initializing Checkbox",d),this.$el=d,this.$input=this.$el.find("input[type=checkbox]");
var c=this;
this.$el.on(Gumby.click,function(e){e.preventDefault(),c.$input.is("[disabled]")||(c.$el.hasClass("checked")?c.update(!1):c.update(!0))
}).on("gumby.check",function(){Gumby.debug("Check event triggered",c.$el),c.update(!0)
}).on("gumby.uncheck",function(){Gumby.debug("Uncheck event triggered",c.$el),c.update(!1)
}),(this.$input.prop("checked")||this.$el.hasClass("checked"))&&c.update(!0)
}a.prototype.update=function(d){var c=this.$el.find("span");
d?(Gumby.debug("Checking Checkbox",this.$el),c.append('<i class="icon-check" />'),this.$input.prop("checked",!0),Gumby.debug("Triggering onCheck event",this.$el),Gumby.debug("Triggering onChange event",this.$el),this.$el.addClass("checked").trigger("gumby.onCheck").trigger("gumby.onChange")):(Gumby.debug("Unchecking Checkbox",this.$el),this.$input.prop("checked",!1),c.find("i").remove(),Gumby.debug("Triggering onUncheck event",this.$el),Gumby.debug("Triggering onChange event",this.$el),this.$el.removeClass("checked").trigger("gumby.onUncheck").trigger("gumby.onChange"))
},Gumby.addInitalisation("checkbox",function(){b(".checkbox").each(function(){var c=b(this);
return c.data("isCheckbox")?!0:(c.data("isCheckbox",!0),new a(c),void 0)
})
}),Gumby.UIModule({module:"checkbox",events:["onCheck","onUncheck","onChange","check","uncheck"],init:function(){Gumby.initialize("checkbox")
}})
}(jQuery),!function(b){function a(d){Gumby.debug("Initializing Fixed Position",d),this.$el=d,this.$window=b(window),this.fixedPoint="",this.pinPoint=!1,this.fixedPointjQ=!1,this.pinPointjQ=!1,this.offset=0,this.pinOffset=0,this.top=0,this.constrainEl=!0,this.state=!1,this.measurements={left:0,width:0},this.setup();
var c=this;
this.$window.on("scroll load",function(){c.monitorScroll()
}),this.$el.on("gumby.initialize",function(){Gumby.debug("Re-initializing Fixed Position",d),c.setup(),c.monitorScroll()
})
}a.prototype.setup=function(){var c=this;
this.fixedPoint=this.parseAttrValue(Gumby.selectAttr.apply(this.$el,["fixed"])),this.pinPoint=Gumby.selectAttr.apply(this.$el,["pin"])||!1,this.offset=Number(Gumby.selectAttr.apply(this.$el,["offset"]))||0,this.pinOffset=Number(Gumby.selectAttr.apply(this.$el,["pinoffset"]))||0,this.top=Number(Gumby.selectAttr.apply(this.$el,["top"]))||0,this.constrainEl=Gumby.selectAttr.apply(this.$el,["constrain"])||!0,"false"===this.constrainEl&&(this.constrainEl=!1),this.$parent=this.$el.parents(".columns, .column, .row"),this.$parent=this.$parent.length?this.$parent.first():!1,this.parentRow=this.$parent?!!this.$parent.hasClass("row"):!1,this.pinPoint&&(this.pinPoint=this.parseAttrValue(this.pinPoint)),this.fixedPointjQ=this.fixedPoint instanceof jQuery,this.pinPointjQ=this.pinPoint instanceof jQuery,this.$parent&&this.constrainEl&&(this.measure(),this.$window.resize(function(){c.state&&(c.measure(),c.constrain())
}))
},a.prototype.monitorScroll=function(){var f=this.$window.scrollTop(),d=this.fixedPointjQ?this.fixedPoint.offset().top:this.fixedPoint,c=!1;
this.pinPoint&&(c=this.pinPointjQ?this.pinPoint.offset().top:this.pinPoint),this.offset&&(d-=this.offset),this.pinOffset&&(c-=this.pinOffset),f>=d&&"fixed"!==this.state?(!c||c>f)&&this.fix():d>f&&"fixed"===this.state?this.unfix():c&&f>=c&&"pinned"!==this.state&&this.pin()
},a.prototype.fix=function(){Gumby.debug("Element has been fixed",this.$el),Gumby.debug("Triggering onFixed event",this.$el),this.state="fixed",this.$el.css({top:this.top}).addClass("fixed").removeClass("unfixed pinned").trigger("gumby.onFixed"),this.$parent&&this.constrain()
},a.prototype.unfix=function(){Gumby.debug("Element has been unfixed",this.$el),Gumby.debug("Triggering onUnfixed event",this.$el),this.state="unfixed",this.$el.addClass("unfixed").removeClass("fixed pinned").trigger("gumby.onUnfixed")
},a.prototype.pin=function(){Gumby.debug("Element has been pinned",this.$el),Gumby.debug("Triggering onPinned event",this.$el),this.state="pinned",this.$el.css({top:this.$el.offset().top}).addClass("pinned fixed").removeClass("unfixed").trigger("gumby.onPinned")
},a.prototype.constrain=function(){Gumby.debug("Constraining element",this.$el),this.$el.css({left:this.measurements.left,width:this.measurements.width})
},a.prototype.measure=function(){var c;
this.measurements.left=this.$parent.offset().left,this.measurements.width=this.$parent.width(),this.parentRow&&(c=Number(this.$parent.css("paddingLeft").replace(/px/,"")),c&&(this.measurements.left+=c))
},a.prototype.parseAttrValue=function(d){if(b.isNumeric(d)){return Number(d)
}if("top"===d){return this.$el.offset().top
}var c=b(d);
return c.length?c:(Gumby.error("Cannot find Fixed target: "+d),!1)
},Gumby.addInitalisation("fixed",function(c){b("[data-fixed],[gumby-fixed],[fixed]").each(function(){var d=b(this);
return d.data("isFixed")&&!c?!0:d.data("isFixed")&&c?(d.trigger("gumby.initialize"),!0):(d.data("isFixed",!0),new a(d),void 0)
})
}),Gumby.UIModule({module:"fixed",events:["initialize","onFixed","onUnfixed"],init:function(){Gumby.initialize("fixed")
}})
}(jQuery),!function(b){function a(f){Gumby.debug("Initializing Navbar",f),this.$el=f,this.$dropDowns=this.$el.find("li:has(.dropdown)");
var d=this,c=this.$el.attr("gumby-persist");
"undefined"==typeof c&&"false"!==c&&this.$el.find("li:not(:has(.dropdown)) a").on(Gumby.click,function(){d.$el.find("ul").removeClass("active")
}),this.$dropDowns.on(Gumby.click,this.toggleDropdown).on("swiperight",this.openLink),"#"!==this.$dropDowns.children("a").attr("href")&&this.$dropDowns.children("a").append('<i class="icon-popup"></i>').children("i").on(Gumby.click,this.openLink),this.$el.find("li:not(:has(.dropdown)) a[href]").on(Gumby.click,this.openLink)
}Gumby.gumbyTouch&&(a.prototype.toggleDropdown=function(d){if(d.preventDefault(),b(this).parents(".dropdown")&&d.stopImmediatePropagation(),!b(d.target).is("i")){var c=b(this);
c.hasClass("active")?c.removeClass("active"):c.addClass("active")
}},a.prototype.openLink=function(d){d.preventDefault();
var c,f=b(this),g=f;
f.is("i")?g=f.parent("a"):f.is("li")&&(g=f.children("a")),c=g.attr("href"),"blank"==g.attr("target")?window.open(c):window.location=c
},Gumby.addInitalisation("navbar",function(){b(".navbar").each(function(){var c=b(this);
return c.data("isNavbar")?!0:(c.data("isNavbar",!0),new a(c),void 0)
})
}),Gumby.UIModule({module:"navbar",events:[],init:function(){Gumby.initialize("navbar")
}}))
}(jQuery),!function(b){function a(d){Gumby.debug("Initializing Radio Button",d),this.$el=d,this.$input=this.$el.find("input[type=radio]");
var c=this;
this.$el.on(Gumby.click,function(e){e.preventDefault(),c.$input.is("[disabled]")||c.update()
}).on("gumby.check",function(){Gumby.debug("Check event triggered",c.$el),c.update()
}),(this.$input.prop("checked")||this.$el.hasClass("checked"))&&c.update(!0)
}a.prototype.update=function(){if(!(this.$el.hasClass("checked")&&this.$input.prop("checked")&&this.$el.find("i.icon-dot").length)){Gumby.debug("Updating Radio Button group",this.$el);
var d=this.$el.find("span"),c='input[name="'+this.$input.attr("name")+'"]';
b(".radio").has(c).removeClass("checked").find("input").prop("checked",!1).end().find("i").remove(),this.$input.prop("checked",!0),d.append('<i class="icon-dot" />'),Gumby.debug("Triggering onCheck event",this.$el),this.$el.addClass("checked").trigger("gumby.onCheck")
}},Gumby.addInitalisation("radiobtn",function(){b(".radio").each(function(){var c=b(this);
return c.data("isRadioBtn")?!0:(c.data("isRadioBtn",!0),new a(c),void 0)
})
}),Gumby.UIModule({module:"radiobtn",events:["onCheck","check"],init:function(){Gumby.initialize("radiobtn")
}})
}(jQuery),!function(b){function a(d){Gumby.debug("Initializing Retina",d),this.$el=d,this.imageSrc=this.$el.attr("src"),this.retinaSrc=this.fetchRetinaImage(),this.$retinaImg=b(new Image);
var c=this;
return this.retinaSrc?(this.$retinaImg.attr("src",this.retinaSrc).load(function(){c.retinaImageLoaded()
}).error(function(){Gumby.error("Couln't load retina image: "+c.retinaSrc)
}),void 0):!1
}a.prototype.fetchRetinaImage=function(){var d=this.imageSrc,c=this.imageSrc.search(/(\.|\/)(gif|jpe?g|png)$/i);
return 0>c?!1:d.substr(0,c)+"@2x"+d.substr(c,d.length)
},a.prototype.retinaImageLoaded=function(){Gumby.debug("Swapping image for retina version",this.$el),Gumby.debug("Triggering onRetina event",this.$el),this.$el.attr("src",this.$retinaImg.attr("src")).trigger("gumby.onRetina")
},Gumby.addInitalisation("retina",function(){!window.devicePixelRatio||window.devicePixelRatio<=1||b("img[data-retina],img[gumby-retina],img[retina]").each(function(){var c=b(this);
return c.data("isRetina")?!0:(c.data("isRetina",!0),new a(c),void 0)
})
}),Gumby.UIModule({module:"retina",events:["onRetina"],init:function(){Gumby.initialize("retina")
}})
}(jQuery),!function(b){function a(d){Gumby.debug("Initializing Skiplink",d),this.$el=d,this.targetPos=0,this.duration=0,this.offset=!1,this.easing="",this.update=!1,this.setup();
var c=this;
this.$el.on(Gumby.click+" gumby.skip",function(e){e.preventDefault(),"skip"===e.namespace&&Gumby.debug("Skip event triggered",c.$el),c.update?c.calculateTarget(c.skipTo):c.skipTo()
}).on("gumby.initialize",function(){Gumby.debug("Re-initializing Skiplink",c.$el),c.setup()
})
}a.prototype.setup=function(){this.duration=Number(Gumby.selectAttr.apply(this.$el,["duration"]))||200,this.offset=Gumby.selectAttr.apply(this.$el,["offset"])||!1,this.easing=Gumby.selectAttr.apply(this.$el,["easing"])||"swing",this.update=Gumby.selectAttr.apply(this.$el,["update"])?!0:!1,this.calculateTarget()
},a.prototype.calculateTarget=function(d){var c,f=Gumby.selectAttr.apply(this.$el,["goto"]);
if("top"==f){this.targetPos=0
}else{if(b.isNumeric(f)){this.targetPos=Number(f)
}else{if(c=b(f),!c.length){return Gumby.error("Cannot find skiplink target: "+f),!1
}this.targetPos=c.offset().top
}}d&&d.apply(this)
},a.prototype.skipTo=function(){Gumby.debug("Skipping to target",this.$el);
var c=this;
b("html,body").animate({scrollTop:this.calculateOffset()},this.duration,this.easing).promise().done(function(){Gumby.debug("Triggering onComplete event",c.$el),c.$el.trigger("gumby.onComplete")
})
},a.prototype.calculateOffset=function(){if(!this.offset){return this.targetPos
}var d=this.offset.substr(0,1),c=Number(this.offset.substr(1,this.offset.length));
return"-"===d?this.targetPos-c:"+"===d?this.targetPos+c:void 0
},Gumby.addInitalisation("skiplink",function(c){b(".skiplink > a, .skip").each(function(){var d=b(this);
return d.data("isSkipLink")&&!c?!0:d.data("isSkipLink")&&c?(d.trigger("gumby.initialize"),!0):(d.data("isSkipLink",!0),new a(d),void 0)
})
}),Gumby.UIModule({module:"skiplink",events:["initialize","onComplete","skip"],init:function(){Gumby.initialize("skiplink")
}})
}(jQuery),!function(b){function a(d){Gumby.debug("Initializing Tabs",d),this.$el=d,this.$nav=this.$el.find("> ul.tab-nav > li"),this.$content=this.$el.children(".tab-content");
var c=this;
this.$nav.children("a").on(Gumby.click,function(e){e.preventDefault(),c.click(b(this))
}),this.$el.on("gumby.set",function(f,e){Gumby.debug("Set event triggered",c.$el),c.set(f,e)
})
}a.prototype.click=function(d){var c=d.parent().index();
this.$nav.eq(c).add(this.$content.eq(c)).hasClass("active")||(Gumby.debug("Setting active tab to "+c,this.$el),this.$nav.add(this.$content).removeClass("active"),this.$nav.eq(c).add(this.$content.eq(c)).addClass("active"),Gumby.debug("Triggering onChange event",this.$el),this.$el.trigger("gumby.onChange",c))
},a.prototype.set=function(d,c){this.$nav.eq(c).find("a").trigger(Gumby.click)
},Gumby.addInitalisation("tabs",function(){b(".tabs").each(function(){var c=b(this);
return c.data("isTabs")?!0:(c.data("isTabs",!0),new a(c),void 0)
})
}),Gumby.UIModule({module:"tabs",events:["onChange","set"],init:function(){Gumby.initialize("tabs")
}})
}(jQuery),!function(c){function b(d){this.$el=c(d),this.targets=[],this.on="",this.className="",this.self=!1,this.$el.length&&(Gumby.debug("Initializing Toggle",d),this.init())
}function a(d){this.$el=c(d),this.targets=[],this.on="",this.className="",this.self=!1,this.$el.length&&(Gumby.debug("Initializing Switch",d),this.init())
}b.prototype.init=function(){var d=this;
this.setup(),this.$el.on(this.on,function(e){e.preventDefault(),d.trigger(d.triggered)
}).on("gumby.trigger",function(){Gumby.debug("Trigger event triggered",d.$el),d.trigger(d.triggered)
}).on("gumby.initialize",function(){Gumby.debug("Re-initializing "+d.constructor,$el),d.setup()
})
},b.prototype.setup=function(){this.targets=this.parseTargets(),this.on=Gumby.selectAttr.apply(this.$el,["on"])||Gumby.click,this.className=Gumby.selectAttr.apply(this.$el,["classname"])||"active",this.self="false"===Gumby.selectAttr.apply(this.$el,["self"])
},b.prototype.parseTargets=function(){var e=Gumby.selectAttr.apply(this.$el,["trigger"]),d=0,f=[];
return e?(d=e.indexOf("|"),-1===d?this.checkTargets([e])?[c(e)]:!1:(f=e.split("|"),this.checkTargets(f)?f.length>1?[c(f[0]),c(f[1])]:[c(f[0])]:!1)):!1
},b.prototype.checkTargets=function(e){var d=0;
for(d;
d<e.length;
d++){if(e[d]&&!c(e[d]).length){return Gumby.error("Cannot find "+this.constructor.name+" target: "+e[d]),!1
}}return !0
},b.prototype.triggered=function(){Gumby.debug("Triggering onTrigger event",this.$el),this.$el.trigger("gumby.onTrigger",[this.$el.hasClass(this.className)])
},a.prototype=new b,a.prototype.constructor=a,b.prototype.trigger=function(e){Gumby.debug("Triggering Toggle",this.$el);
var d;
this.targets?1==this.targets.length?this.$el.add(this.targets[0]).toggleClass(this.className):this.targets.length>1&&(this.targets[0].hasClass(this.className)?(d=this.targets[0],this.self||(d=d.add(this.$el)),d.removeClass(this.className),this.targets[1].addClass(this.className)):(d=this.targets[0],this.self||(d=d.add(this.$el)),d.addClass(this.className),this.targets[1].removeClass(this.className))):this.$el.toggleClass(this.className),e&&"function"==typeof e&&e.apply(this)
},a.prototype.trigger=function(e){Gumby.debug("Triggering Switch",this.$el);
var d;
this.targets?1==this.targets.length?(d=this.targets[0],this.self||(d=d.add(this.$el)),d.addClass(this.className)):this.targets.length>1&&(d=this.targets[0],this.self||(d=d.add(this.$el)),d.addClass(this.className),this.targets[1].removeClass(this.className)):this.$el.addClass(this.className),e&&"function"==typeof e&&e.apply(this)
},Gumby.addInitalisation("toggles",function(d){c(".toggle").each(function(){var e=c(this);
return e.data("isToggle")&&!d?!0:(e.data("isToggle")&&d&&e.trigger("gumby.initialize"),e.data("isToggle",!0),new b(e),void 0)
})
}),Gumby.addInitalisation("switches",function(d){c(".switch").each(function(){var e=c(this);
return e.data("isSwitch")&&!d?!0:e.data("isSwitch")&&d?(e.trigger("gumby.initialize"),!0):(e.data("isSwitch",!0),new a(e),void 0)
})
}),Gumby.UIModule({module:"toggleswitch",events:["initialize","trigger","onTrigger"],init:function(){Gumby.initialize("switches"),Gumby.initialize("toggles")
}})
}(jQuery),!function(b){function a(f,d){Gumby&&Gumby.debug("Initializing Validation",f),this.$this=f,this.$field=this.$this.parents(".field"),this.req=d||function(){return !!this.$this.val().length
};
var c=this;
this.$this.is("[type=checkbox], [type=radio]")?(this.$field=this.$this.parent("label"),this.$field.on("gumby.onChange",function(){c.validate()
})):this.$this.is("select")?(this.$field=this.$this.parents(".picker"),this.$field.on("change",function(){c.validate()
})):this.$this.on("blur",function(e){9!==e.which&&c.validate()
})
}a.prototype.validate=function(){var c=this.req(this.$this);
return c?this.$field.removeClass("danger").addClass("success"):this.$field.removeClass("success").addClass("danger"),c
},b.fn.validation=function(c){var d=b.extend({submit:!1,fail:!1,required:[]},c),f=[];
return this.each(function(){if(!d.required.length){return !1
}var g,h=b(this),e=d.required.length;
for(g=0;
e>g;
g++){f.push(new a(h.find('[name="'+d.required[g].name+'"]'),d.required[g].validate||!1))
}h.on("submit",function(l){var k=!1;
if(!h.data("passed")){l.preventDefault();
var j,i=f.length;
for(j=0;
i>j;
j++){f[j].validate()||(k=!0)
}if(k){if(d.fail&&"function"==typeof d.fail){return d.fail(),void 0
}}else{if(d.submit&&"function"==typeof d.submit){return d.submit(h.serializeArray()),void 0
}h.data("passed",!0).submit()
}}})
})
}
}(jQuery),!function(a){Gumby.touchDevice&&Gumby.touchEvents||!Gumby.autoInit?Gumby.touchEvents&&Gumby.touchDevice&&(Gumby.debug("Loading jQuery mobile touch events"),yepnope.errorTimeout=2000,Modernizr.load({test:Modernizr.touch,yep:Gumby.touchEvents+"/jquery.mobile.custom.min.js",complete:function(){a.mobile||Gumby.error("Error loading jQuery mobile touch events"),Gumby.touchEventsLoaded=!0,Gumby.autoInit?window.Gumby.init():Gumby.uiModulesReady&&Gumby.helpers()
}})):window.Gumby.init(),"function"==typeof define&&define.amd&&define(window.Gumby)
}(jQuery);